; a generative tox configuration
; see: https://testrun.org/tox/en/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    quality,
    {py36,py37},
    covered,

[testenv]
basepython =
    py36: {env:TOXPYTHON:python3.6}
    py37: {env:TOXPYTHON:python3.7}
    {clean,covered,coveralls,codecov,quality}: {env:TOXPYTHON:python3}
deps =
    pytest
    pytest-travis-fold
    pytest-cov
commands =
    {posargs:pytest --cov --cov-report=term-missing -vv tests}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[flake8]
count = True
statistics = True
max-line-length = 79
import-order-style = pycharm
application-import-names = tvmaze
no-accept-encodings = True
docstring-quotes = """
inline-quotes = '
multiline-quotes = '
ignore =
;   H404 multi line docstring should start without a leading new line
    H404
;   H405 multi line docstring summary not separated with an empty line
    H405
;   H238 old style class declaration, use new style (inherit from `object`)
    H238
per-file-ignores =
;   S101 Use of assert detected
    tests/**: S101

[testenv:quality]
deps =
    flake8
    flake8-bandit
    flake8-bugbear
    flake8-builtins
    flake8-coding
    flake8-commas
    flake8-comprehensions
    flake8-docstrings
    flake8-import-order
    flake8-pep3101
    flake8-per-file-ignores
    flake8-quotes
    flake8-requirements
    flake8-self
    flake8-string-format
    flake8-tidy-imports
    flake8-todo
    hacking
    pep8-naming
    pyroma
skip_install = true
commands =
    flake8 --version
    flake8 src tests setup.py
    pyroma ./

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[coverage:paths]
source =
   src/tvmaze
   */site-packages/tvmaze

[coverage:run]
branch = True
source =
    tvmaze
    tests
parallel = True

[coverage:report]
show_missing = true
precision = 2

[testenv:covered]
deps = coverage
develop = true
commands =
    coverage combine --append
    coverage report
    coverage html

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[testenv:coveralls]
deps =
    coveralls
passenv = COVERALLS_REPO_TOKEN
skip_install = true
commands =
    coveralls []

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage
